// Copyright (C) 2017 The Android Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

apply plugin: 'maven-publish'
apply plugin: 'signing'
afterEvaluate {
    publishing {
        repositories {
            maven {
                url = findProperty('mavenRepo') ?: "${buildDir}/repo"
            }
            maven {
                name = "sonatype"
                def releasesRepoUrl = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
                def snapshotsRepoUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
                url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
                credentials {
                    def ossrhUsername = findProperty('ossrhUsername') ?: ''
                    def ossrhPassword = findProperty('ossrhPassword') ?: ''
                    username ossrhUsername
                    password ossrhPassword
                }
            }
        }
        publications {
            /*
            release(MavenPublication) {
                from components.release
                artifact androidSourcesJar
                groupId = 'com.google.android.exoplayer'
                artifactId = releaseArtifact
                version releaseVersion
                pom {
                    name = releaseArtifact
                    description = releaseDescription
                    licenses {
                        license {
                            name = 'The Apache Software License, Version 2.0'
                            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                            distribution = 'repo'
                        }
                    }
                    developers {
                        developer {
                            name = 'The Android Open Source Project'
                        }
                    }
                    scm {
                        connection = 'scm:git:https://github.com/google/ExoPlayer.git'
                        url = 'https://github.com/google/ExoPlayer'
                    }
                }
            }
            */
            mediaHubRelease(MavenPublication) {
                from components.release
                artifact androidSourcesJar
                groupId = 'com.eu.mediahub.android.exoplayer'
                artifactId = releaseArtifact
                version releaseVersion
                pom {
                    name = releaseArtifact
                    description = releaseDescription
                    licenses {
                        license {
                            name = 'The Apache Software License, Version 2.0'
                            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                            distribution = 'repo'
                        }
                    }
                    developers {
                        developer {
                            id = 'ptsekov'
                            name = 'Pavel Tsekov'
                            email = 'pavel@mediahub.eu.com'
                        }
                    }
                    scm {
                        connection = 'scm:git:https://github.com/mediahub-bg/ExoPlayer.git'
                        url = 'https://github.com/mediahub-bg/ExoPlayer'
                    }
                }
            }
        }
    }
    signing {
        useGpgCmd()
        sign publishing.publications.mediaHubRelease
    }
}
tasks.withType(PublishToMavenRepository).forEach { task ->
    if (task.name.contains('mediaHubRelease')) {
        task.dependsOn lint, test
    }
}

task androidSourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from android.sourceSets.main.java.srcDirs
}
